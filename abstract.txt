The speed with which researchers and vendors respond to security
vulnerabilities is critical, especially after exploits have been
discovered.  The situation is especially dire for end users who lack
product source code and typically must wait for a patch to be released
by the vendor.  We propose an alternative approach in which newly
discovered exploits drive an automated repair technique capable of
patching vulnerabilities, even without access to source code or
special information from the software vendor.

The repair method uses evolutionary computation to search for patches.
Extensions to earlier work include: Repairing security vulnerabilities
in router binaries; special processing to handle stripped ELF files;
operating without fault localization information; and operating
without a pre-existing regression test suite to define required
program behavior.

We demonstrate the method by repairing two recently discovered
exploits in version 4 of NETGEAR's WNDR3700 wireless router before
NETGEAR released patches publicly for the exploits.  Without the
advantage of regression tests to guide the search, we find that 80% of
repairs of the example exploits retain program functionality.  When a
few user-created tests of required functionality are incorporated in
an interactive process, success increases to 100% of the proposed
repairs.
