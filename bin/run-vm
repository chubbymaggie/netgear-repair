#!/bin/bash
#
# Usage: run-vm [options...]
# run Debian mips in a qemu VM
#
# Options:
#  -p,--port ------- port to use for ssh forwarding
#  -P,--HTML-port -- port to use for HTML forwarding
#                    (default is no HTML port forwarding)
#  -D,--no-daemon -- run interactive and graphic (for initial setup)
#  -d,--dry-run ---- print (don't run) the QEMU command
#  -b,--bridge ----- bridge networking (instead of host forwarding)
#  -i,--image ------ specify a non-default QEMU image to use
#
# Environment:
#  set ENDIANNESS to "le" for little endian, defaults to big
#
# Notes:
# - Adapted from zcutlip's script available at [1].
# - Bridging on Arch linux with qemu-bridge-helper [2] and netctl [3].
# 
# [1] http://shadow-file.blogspot.com/2013/05/
# [2] https://wiki.archlinux.org/index.php/QEMU
# [3] https://wiki.archlinux.org/index.php/Bridge_with_netctl
#
. bin/common

HTML_PORT=""
DAEMONIZE="-display none -daemonize"
DRY="no"
NET=hostfwd
SHORT="p:P:Ddbi:"
LONG="port:,html-port:,dry-run,no-daemon,bridge,image:"
eval set -- $(getopt -o $SHORT -l $LONG -- "$@" || help;)
while [ $# -gt 0 ];do
    case $1 in
        -p|--port) PORT="$2"; shift;;
        -P|--html-port) HTML_PORT="$2"; shift;;
        -D|--no-daemon) DAEMONIZE="";;
        -d|--dry-run) DRY="yes";;
        -b|--bridge) NET=bridge;;
        -i|--image) IMAGE="$2"; shift;;
        (--) shift; break;;
        (-*) error "unrecognized option $1";;
        (*)  break;;
    esac
    shift
done
case $NET in
    bridge) NET="-net nic -net bridge,br=br0";;
    hostfwd)
        NET="-net nic -net user,hostfwd=tcp:127.0.0.1:$PORT-:22"
        if [ ! -z $HTML_PORT ];then
            NET+=",hostfwd=tcp:127.0.0.1:$HTML_PORT-:80"
        fi;;
esac

if [ "$DRY" == "yes" ];then
    QEMU="echo $QEMU"
fi

msg "Starting Debian mips system in a QEMU session."
$QEMU $NET $DAEMONIZE -M malta -kernel $KERNEL -hda $IMAGE \
    -append "root=/dev/sda1 console=tty0"
